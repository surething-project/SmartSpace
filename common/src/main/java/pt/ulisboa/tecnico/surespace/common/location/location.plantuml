@startuml

title __LOCATION's Class Diagram__\n

  namespace pt.ulisboa.tecnico.surespace.common.location {
    abstract class pt.ulisboa.tecnico.surespace.common.location.Location {
        {static} - serialVersionUID : long
        {abstract} + asString()
        {abstract} + proximityTo()
        # Location()
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    interface pt.ulisboa.tecnico.surespace.common.location.LocationConverter {
        {abstract} + convert()
        {abstract} + convert()
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    class pt.ulisboa.tecnico.surespace.common.location.LocationGPS {
        - latitude : double
        - longitude : double
        {static} - serialVersionUID : long
        - threshold : double
        + LocationGPS()
        + asString()
        + clone()
        + equals()
        + getLatitude()
        + getLongitude()
        + getThreshold()
        + hashCode()
        + proximityTo()
        + setLatitude()
        + setLongitude()
        + setThreshold()
        + toString()
        - LocationGPS()
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    class pt.ulisboa.tecnico.surespace.common.location.LocationOLC {
        {static} - CODE_PRECISION : int
        - code : String
        {static} - serialVersionUID : long
        + LocationOLC()
        + LocationOLC()
        + asString()
        + clone()
        + equals()
        + hashCode()
        + proximityTo()
        + setCode()
        + toString()
        - LocationOLC()
        {static} - createOLC()
        {static} - getK1Neighbors()
        {static} - getK2Neighbors()
        {static} - getNeighbor()
        - getOpenLocationCode()
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    enum NeighborCode {
      E
      N
      NE
      NW
      S
      SE
      SW
      W
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    class pt.ulisboa.tecnico.surespace.common.location.LocationProximity {
        - confidence : double
        {static} - serialVersionUID : long
        + clone()
        + compareTo()
        + equals()
        + getCode()
        + getConfidence()
        + hashCode()
        + inRange()
        + setCode()
        + setConfidence()
        + toString()
    }
  }
  

  namespace pt.ulisboa.tecnico.surespace.common.location {
    enum ProximityCode {
      FAR
      MID
      NEAR
    }
  }
  

  pt.ulisboa.tecnico.surespace.common.location.Location -up-|> pt.ulisboa.tecnico.surespace.common.domain.Object
  pt.ulisboa.tecnico.surespace.common.location.LocationGPS -up-|> pt.ulisboa.tecnico.surespace.common.location.Location
  pt.ulisboa.tecnico.surespace.common.location.LocationOLC -up-|> pt.ulisboa.tecnico.surespace.common.location.Location
  pt.ulisboa.tecnico.surespace.common.location.LocationOLC +-down- pt.ulisboa.tecnico.surespace.common.location.LocationOLC.NeighborCode
  pt.ulisboa.tecnico.surespace.common.location.LocationProximity .up.|> java.lang.Comparable
  pt.ulisboa.tecnico.surespace.common.location.LocationProximity -up-|> pt.ulisboa.tecnico.surespace.common.domain.Object
  pt.ulisboa.tecnico.surespace.common.location.LocationProximity o-- pt.ulisboa.tecnico.surespace.common.location.LocationProximity.ProximityCode : code
  pt.ulisboa.tecnico.surespace.common.location.LocationProximity +-down- pt.ulisboa.tecnico.surespace.common.location.LocationProximity.ProximityCode


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
