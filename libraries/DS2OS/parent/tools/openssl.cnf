#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .
RANDFILE		= $ENV::HOME/.rnd

# To use this configuration file with the "-extfile" option of the
# "openssl x509" utility, name here the section containing the
# X.509v3 extensions to use:
# extensions		= 
# (Alternatively, use a configuration file that has only
# X.509v3 extensions in its main [= default] section.)

# extended attributes for DS2OS
oid_section		= new_oids

[ new_oids ]

# the root for corporate internal use only
corporateInternal=1.3.6.1.4.1

ds2osIsKnowledgeAgent=${corporateInternal}.0
ds2osServiceManifest=${corporateInternal}.1
ds2osAccessIds=${corporateInternal}.2


####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir				= .					# Where everything is kept
certs			= $dir				# Where the issued certs are kept
crl_dir			= $dir				# Where the issued crl are kept
database		= $dir/index.txt	# database index file.
unique_subject	= no				# Set to 'no' to allow creation of
									# several ctificates with same subject.
new_certs_dir	= $dir				# default place for new certs.

certificate		= $dir/ca.crt 		# The CA certificate
serial			= $dir/serial 		# The current serial number
crl				= $dir/crl.pem 		# The current CRL
private_key		= $dir/ca.key		# The private key
RANDFILE		= $dir/.rand		# private random number file

x509_extensions	= v3_ca		        # The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 		= ca_default			# Subject Name options
cert_opt 		= ca_default			# Certificate field options

default_days	= 365				# how long to certify for
default_crl_days= 30				# how long before next CRL
default_md		= sha256			# use public key default MD
preserve		= no				# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy			= policy_anything

# For the CA policy
[ policy_match ]
countryName				= match
stateOrProvinceName		= match
organizationName		= match
organizationalUnitName	= optional
commonName				= supplied
name					= optional
emailAddress			= optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName				= optional
stateOrProvinceName		= optional
localityName			= optional
organizationName		= optional
organizationalUnitName	= optional
commonName				= supplied
name					= optional
emailAddress			= optional

####################################################################
[ req ]
default_bits		= 2048
default_keyfile 	= privkey.pem
distinguished_name	= req_distinguished_name
attributes			= req_attributes
x509_extensions		= v3_ca	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
# utf8only: only UTF8Strings (PKIX recommendation after 2004).
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
string_mask			= utf8only

[ req_distinguished_name ]
countryName						= Country Name (2 letter code)
countryName_default				= $ENV::CERT_C
countryName_min					= 2
countryName_max					= 2

stateOrProvinceName				= State or Province Name (full name)
stateOrProvinceName_default		= $ENV::CERT_ST

localityName					= Locality Name (eg, city)
localityName_default			= $ENV::CERT_L

organizationName				= Organization Name (eg, company)
organizationName_default		= $ENV::CERT_O

organizationalUnitName			= Organizational Unit Name (optional)
organizationalUnitName_default	= $ENV::CERT_OU

commonName						= Common Name (e.g. server FQDN or YOUR name)
commonName_default				= $ENV::CERT_CN
commonName_max					= 64

name							= Name (optional)
name_default					= $ENV::CERT_NAME
name_max						= 64

emailAddress					= Email Address
emailAddress_default			= $ENV::CERT_EMAIL
emailAddress_max				= 64

# SET-ex3						= SET extension number 3

[ req_attributes ]

[ ka_cert ]

# These extensions are added when explicitely requested.

# This goes against PKIX guidelines but some CAs do it and some software
# Requires this to avoid interpreting an end user certificate as a CA
basicConstraints		= CA:FALSE

# Client certificate usage
keyUsage				= nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage		= clientAuth,serverAuth

# PKIX recommendations harmless if included in all certificates
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer:always

# Netscape extensions
nsComment				= "DS2OS KA certificate"
nsCertType				= client,server

# DS2OS extensions
ds2osIsKnowledgeAgent   = ASN1:UTF8String:TRUE

[ service_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# Requires this to avoid interpreting an end user certificate as a CA
basicConstraints		= CA:FALSE

# Client certificate usage
keyUsage				= nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage		= clientAuth

# PKIX recommendations harmless if included in all certificates
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer:always

# Netscape extensions
nsComment				= "DS2OS service certificate"
nsCertType				= client

# DS2OS extensions
ds2osIsKnowledgeAgent   = ASN1:UTF8String:FALSE
ds2osServiceManifest    = ASN1:UTF8String:$ENV::CERT_SERVICE_MANIFEST
ds2osAccessIds          = ASN1:UTF8String:$ENV::CERT_ACCESS_IDS

[ v3_ca ]

# Extensions for a typical CA

# This is what PKIX recommends but some broken software chokes on critical extensions
basicConstraints		= critical,CA:TRUE,pathlen:0

# PKIX recommendation
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid:always,issuer:always

# Key usage: this is typical for a CA certificate
nsComment				= "DS2OS CA"
nsCertType				= sslCA
keyUsage				= critical,cRLSign,keyCertSign
